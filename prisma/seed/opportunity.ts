import { Slug } from "../../src/domain/entities/value-objects/slug";
import { PrismaClient } from "@prisma/client";

export async function seedOpportunity(prisma: PrismaClient) {
	console.log("üå± Seeding opportunity...");

	const opportunityType = await prisma.type.findUnique({
		where: {
			description: "Edital",
		},
	});

	if (!opportunityType) {
		throw new Error("Opportunity type not found");
	}

	const opportunity = await prisma.opportunity.create({
		data: {
			title: "Combate √† Viol√™ncia Contra a Mulher",
			slug: Slug.createFromText("Combate √† Viol√™ncia Contra a Mulher").value,
			responsibleAgency: "Prefeitura Municipal",
			description:
				"Este programa visa fortalecer a seguran√ßa p√∫blica municipal atrav√©s de investimentos estrat√©gicos em capacita√ß√£o e equipamentos para a Guarda Municipal. A iniciativa busca modernizar as opera√ß√µes e aumentar a efici√™ncia do patrulhamento preventivo.\n\nO projeto inclui a aquisi√ß√£o de equipamentos de √∫ltima gera√ß√£o, treinamento especializado para os agentes e implementa√ß√£o de sistemas integrados de gest√£o. A meta √© reduzir √≠ndices de criminalidade e melhorar a resposta a incidentes em √°reas cr√≠ticas do munic√≠pio.",
			typeId: opportunityType.id,
			availableValue: 1000000,
			minValue: 800000,
			maxValue: 1000000,
			initialDeadline: "2025-05-12T18:00:28.044Z",
			finalDeadline: "2025-05-12T18:00:28.044Z",
			requiresCounterpart: true,
			counterpartPercentage: 20,
			isActive: true,
			releasedForAll: false,
			requiredDocuments: {
				create: [
					{
						name: "Declara√ß√£o de Contrapartida Municipal",
						description:
							"Documento oficial assinado pelo prefeito municipal declarando o comprometimento em aportar contrapartida financeira ou em bens e servi√ßos equivalente a no m√≠nimo 20% do valor total do projeto, conforme legisla√ß√£o vigente.",
						model:
							"https://www.gov.br/esporte/pt-br/noticias-e-conteudos/esporte/ministerio-lanca-edital-para-projetos-relativos-ao-programa-vida-saudavel/AnexoIIIModelodaDeclaraodeContrapartida.pdf",
					},
				],
			},
		},
	});

	const doc1 = await prisma.document.create({
		data: {
			name: "Justificativa Completa do Projeto",
			opportunityId: opportunity.id,
		},
	});

	const justificativaField = await prisma.field.create({
		data: {
			name: "Justificativa",
			documentId: doc1.id,
		},
	});

	await prisma.field.createMany({
		data: [
			{
				name: "Informa√ß√µes Gerais",
				documentId: doc1.id,
			},
			{
				name: "Caracteriza√ß√£o dos interesses rec√≠procos",
				documentId: doc1.id,
				parentId: justificativaField.id,
			},
			{
				name: "Indica√ß√£o do p√∫blico alvo",
				documentId: doc1.id,
				parentId: justificativaField.id,
			},
		],
	});

	const doc2 = await prisma.document.create({
		data: {
			name: "Sustentabilidade e Localiza√ß√£o de Bens do Projeto",
			opportunityId: opportunity.id,
		},
	});

	const sustentabilidadeField = await prisma.field.create({
		data: {
			name: "Sustentabilidade",
			documentId: doc2.id,
		},
	});

	await prisma.field.createMany({
		data: [
			{
				name: "Manuten√ß√£o pr√≥pria da sua frota de ve√≠culos",
				documentId: doc2.id,
				parentId: sustentabilidadeField.id,
			},
			{
				name: "Condi√ß√µes para o abastecimento das viaturas a serem adquiridas",
				documentId: doc2.id,
				parentId: sustentabilidadeField.id,
			},
		],
	});

	await prisma.document.create({
		data: {
			name: "Declara√ß√£o de Contrapartida",
			opportunityId: opportunity.id,
			fields: {
				createMany: {
					data: [
						{
							name: "Rubrica or√ßament√°ria (capital)",
						},
						{
							name: "Valor",
						},
					],
				},
			},
		},
	});

	console.log("‚úÖ Opportunity seeded successfully");

	return opportunity;
}
